@using Business.Models
@model UpdateTaskViewModel
@{
	ViewData["Title"] = "TaskDetails";
	Layout = "~/Views/Shared/LayoutUI.cshtml";
	var Selects = ViewData["Selects"] as List<SelectListItemViewModel>;
	var tags = ViewData["Tags"] as List<AllTagsViewModel>;
	var task = ViewData["TaskModel"] as TaskViewModel;


}
@section Styles {
	<link href="
		https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css
													" rel="stylesheet">
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/select2-bootstrap-5-theme@1.3.0/dist/select2-bootstrap-5-theme.min.css" />
}

<nav aria-label="breadcrumb">
	<ol class="breadcrumb">
		<li class="breadcrumb-item"><a href="/Task/Index">Task</a></li>
		<li class="breadcrumb-item active" aria-current="page">Task Details</li>
	</ol>
</nav>

<div class="d-flex">


	<div class="col-8 flex-column">



		<div class="form-group">

			<h1>
				@task.Name
			</h1>
			<div class="form-group">
				<h4>
					@task.Description
				</h4>
			</div>
		</div>


		<div class="form-group">
			@*
			gelecekteki comment yeri olabilir eklenirse
			*@
		</div>

	</div>
	<div class="col-4 flex-column">
		@* burasi yan tarafta kalan küçük alanın başlangıcı*@


		<div class="form-group d-flex justify-content-between text-center align-items-center">
			<span>Task Responsible</span>
			<span class="w-50">
				@task.ResponsibleId.Username
			</span>
		</div>

		<div class="form-group d-flex justify-content-between text-center align-items-center">

			<span>Task Reporter</span>
			<span class="w-50">
				@task.ReporterId.Username
			</span>
		</div>

		<div class="form-group d-flex justify-content-between text-center align-items-center">
			<span>Due time</span>
			<span class="w-50">@task.DueTime</span>
		</div>

		<div class="form-group d-flex justify-content-between text-center">
			<span>Created On</span>
			<span class="w-50">@task.CreatedOn</span>
		</div>


		<div class="form-group d-flex justify-content-between text-center align-items-center">

			<span>Tags</span>
			<span class="w-50">@task.Tag.Name</span>
		</div>

		<div class="form-group d-flex justify-content-between text-center align-items-center">
			<span>Project Name</span>
			<a href="/Project/ProjectDetails/@task.Project.Id" class="btn btn-light w-50">@task.Project.Name</a>
		</div>

		<div class="form-group d-flex justify-content-center text-center align-items-center">

			<button data-toggle="modal"
					data-target="#taskupdate-modal" class="btn btn-success w-50">
				Update Task
			</button>
		</div>





	</div>


</div>


<div id="taskupdate-modal" class="modal fade" tabindex="-1" role="dialog"
	 aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">

			<div class="modal-body">
				<div class="text-center mt-2 mb-4">
					<a href="index.html" class="text-success">
						<span>
							<img class="mr-2" src="/assets/images/vitalen-bt-logo.png"
								 alt="" height="18">
						</span>
					</a>
				</div>

				<form class="pl-3 pr-3" method="post">

					<input type="hidden" asp-for="Id" />
					@* <input type="hidden" asp-for="ProjectId" /> *@

					<div class="form-group">
						<label for="taskName">Task name</label>
						<input class="form-control" type="text" asp-for="Name" id="taskName"
							   required="">
					</div>

					<div class="form-group">
						<label for="description">Description</label>
						<input class="form-control" type="text" asp-for="Description" id="description"
							   required="">
					</div>

					<div class="form-group">
						<label for="priority">Priority</label>
						<input class="form-control" type="number" asp-for="Priority" id="priority"
							   required="">
					</div>

					<div class="form-group">
						<label for="dueTime">Due Time</label>
						<input class="form-control" type="datetime-local" asp-for="DueTime" id="dueTime"
							   required="">
					</div>


					<div class="form-group">
						<label for="userSelectResponsible">Task Responsible</label>
						<select id="userSelectResponsible" class="form-select" data-placeholder="Choose a thing" asp-for="ResponsibleId">

							@foreach (var user in Selects)
							{
								<option value="@user.id">@user.text</option>
							}
						</select>
					</div>

					<div class="form-group">
						<label for="userSelectReporter">Task Reporter</label>
						<select id="userSelectReporter" class="form-select" data-placeholder="Choose a thing" asp-for="ReporterId">

							@foreach (var user in Selects)
							{
								<option value="@user.id">@user.text</option>
							}
						</select>
					</div>

					<div class="form-group">
						<label for="userSelect">Tag</label>
						<select id="userSelect" class="form-control" asp-for="TagId">

							@foreach (var user in tags)
							{
								<option value="@user.Id">@user.Name</option>
							}
						</select>
					</div>



					<div class="form-group text-center">
						<button class="btn btn-primary" type="submit">
							UpdateTask
						</button>
					</div>



				</form>

			</div>
		</div>
	</div>
</div>










@section Scripts {

	<script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>
	<script src="
		https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js
																		"></script>

	<script>
		// select2 için dinamik bir şekilde kullanıcıları getirme

		$(document).ready(function () {
			$('#userSelectResponsible').select2({
				theme: 'bootstrap-5',
				placeholder: $(this).data('placeholder'),
				width: '100%',
				ajax: {
					url: "/User/SelectList/?ProjectId=@(task.Project.Id)",
					dataType: 'json',
					delay: 250,
					data: function (params) {
						return {
							keyword: params.term,
							ProjectId: @task.Project.Id
						};
					},
					processResults: function (data) {
						return {
							results: data,

						};
					},
					cache: true
				},
			});


			$('#userSelectReporter').select2({
				theme: 'bootstrap-5',
				placeholder: $(this).data('placeholder'),
				width: '100%',
				ajax: {
					url: "/User/SelectList/",
					dataType: 'json',
					delay: 250,
					data: function (params) {
						return {
							keyword: params.term,
							ProjectId : @task.Project.Id

						};
					},
					processResults: function (data) {
						return {
							results: data,

						};
					},
					cache: true
				},
			});



		});



	</script>

	



}